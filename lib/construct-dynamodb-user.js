"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamoUserTable = void 0;
const constructs_1 = require("constructs");
const dynamodb = require("aws-cdk-lib/aws-dynamodb");
const aws_cdk_lib_1 = require("aws-cdk-lib");
class DynamoUserTable extends constructs_1.Construct {
    constructor(scope, id, buildConfig) {
        super(scope, `${buildConfig.envPrefix}${id}`);
        const tableName = `${buildConfig.envPrefix}${id}`;
        const dynamoTable = new dynamodb.Table(this, tableName, {
            partitionKey: { name: 'userId', type: dynamodb.AttributeType.STRING },
            sortKey: { name: 'userEmail', type: dynamodb.AttributeType.STRING },
            billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,
            tableName: tableName,
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.RETAIN
        });
        dynamoTable.addGlobalSecondaryIndex({
            indexName: 'userEmailIndex',
            partitionKey: { name: 'userEmail', type: dynamodb.AttributeType.STRING },
            sortKey: { name: 'userStatus', type: dynamodb.AttributeType.STRING },
            projectionType: dynamodb.ProjectionType.KEYS_ONLY,
        });
        this.table = dynamoTable;
        this.tableName = tableName;
    }
}
exports.DynamoUserTable = DynamoUserTable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RydWN0LWR5bmFtb2RiLXVzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjb25zdHJ1Y3QtZHluYW1vZGItdXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBdUM7QUFDdkMscURBQXFEO0FBRXJELDZDQUE0QztBQUU1QyxNQUFhLGVBQWdCLFNBQVEsc0JBQVM7SUFLMUMsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxXQUF3QjtRQUM5RCxLQUFLLENBQUMsS0FBSyxFQUFFLEdBQUcsV0FBVyxDQUFDLFNBQVMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRTlDLE1BQU0sU0FBUyxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsR0FBRyxFQUFFLEVBQUUsQ0FBQztRQUVsRCxNQUFNLFdBQVcsR0FBRyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRTtZQUNwRCxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRTtZQUNyRSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBQztZQUNqRSxXQUFXLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxlQUFlO1lBQ2pELFNBQVMsRUFBRSxTQUFTO1lBQ3BCLGFBQWEsRUFBRSwyQkFBYSxDQUFDLE1BQU07U0FDdEMsQ0FBQyxDQUFDO1FBRUgsV0FBVyxDQUFDLHVCQUF1QixDQUFDO1lBQ2hDLFNBQVMsRUFBRSxnQkFBZ0I7WUFDM0IsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUM7WUFDdEUsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUM7WUFDbEUsY0FBYyxFQUFFLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUztTQUNwRCxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQztRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUMvQixDQUFDO0NBQ0o7QUE1QkQsMENBNEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XG5pbXBvcnQgKiBhcyBkeW5hbW9kYiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZHluYW1vZGInO1xuaW1wb3J0IHsgQnVpbGRDb25maWcgfSBmcm9tICcuL2J1aWxkLWNvbmZpZyc7XG5pbXBvcnQgeyBSZW1vdmFsUG9saWN5IH0gZnJvbSAnYXdzLWNkay1saWInO1xuICBcbmV4cG9ydCBjbGFzcyBEeW5hbW9Vc2VyVGFibGUgZXh0ZW5kcyBDb25zdHJ1Y3Qge1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHRhYmxlOiBkeW5hbW9kYi5UYWJsZTtcbiAgICBwdWJsaWMgcmVhZG9ubHkgdGFibGVOYW1lOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBidWlsZENvbmZpZzogQnVpbGRDb25maWcpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGAke2J1aWxkQ29uZmlnLmVudlByZWZpeH0ke2lkfWApO1xuXG4gICAgICAgIGNvbnN0IHRhYmxlTmFtZSA9IGAke2J1aWxkQ29uZmlnLmVudlByZWZpeH0ke2lkfWA7XG5cbiAgICAgICAgY29uc3QgZHluYW1vVGFibGUgPSBuZXcgZHluYW1vZGIuVGFibGUodGhpcywgdGFibGVOYW1lLCB7IFxuICAgICAgICAgICAgcGFydGl0aW9uS2V5OiB7IG5hbWU6ICd1c2VySWQnLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlNUUklORyB9LFxuICAgICAgICAgICAgc29ydEtleToge25hbWU6ICd1c2VyRW1haWwnLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlNUUklOR30sXG4gICAgICAgICAgICBiaWxsaW5nTW9kZTogZHluYW1vZGIuQmlsbGluZ01vZGUuUEFZX1BFUl9SRVFVRVNULFxuICAgICAgICAgICAgdGFibGVOYW1lOiB0YWJsZU5hbWUsXG4gICAgICAgICAgICByZW1vdmFsUG9saWN5OiBSZW1vdmFsUG9saWN5LlJFVEFJTlxuICAgICAgICB9KTtcblxuICAgICAgICBkeW5hbW9UYWJsZS5hZGRHbG9iYWxTZWNvbmRhcnlJbmRleCh7XG4gICAgICAgICAgICBpbmRleE5hbWU6ICd1c2VyRW1haWxJbmRleCcsXG4gICAgICAgICAgICBwYXJ0aXRpb25LZXk6IHtuYW1lOiAndXNlckVtYWlsJywgdHlwZTogZHluYW1vZGIuQXR0cmlidXRlVHlwZS5TVFJJTkd9LFxuICAgICAgICAgICAgc29ydEtleToge25hbWU6ICd1c2VyU3RhdHVzJywgdHlwZTogZHluYW1vZGIuQXR0cmlidXRlVHlwZS5TVFJJTkd9LFxuICAgICAgICAgICAgcHJvamVjdGlvblR5cGU6IGR5bmFtb2RiLlByb2plY3Rpb25UeXBlLktFWVNfT05MWSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy50YWJsZSA9IGR5bmFtb1RhYmxlO1xuICAgICAgICB0aGlzLnRhYmxlTmFtZSA9IHRhYmxlTmFtZTtcbiAgICB9XG59Il19