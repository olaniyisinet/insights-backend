"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamoTenantTable = void 0;
const constructs_1 = require("constructs");
const dynamodb = require("aws-cdk-lib/aws-dynamodb");
const aws_cdk_lib_1 = require("aws-cdk-lib");
class DynamoTenantTable extends constructs_1.Construct {
    constructor(scope, id, buildConfig) {
        super(scope, `${buildConfig.envPrefix}${id}`);
        const tableName = `${buildConfig.envPrefix}${id}`;
        const dynamoTable = new dynamodb.Table(this, tableName, {
            partitionKey: { name: 'tenantId', type: dynamodb.AttributeType.STRING },
            sortKey: { name: 'tenantCode', type: dynamodb.AttributeType.STRING },
            billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,
            tableName: tableName,
            removalPolicy: aws_cdk_lib_1.RemovalPolicy.RETAIN
        });
        dynamoTable.addGlobalSecondaryIndex({
            indexName: 'tenantCodeIndex',
            partitionKey: { name: 'tenantCode', type: dynamodb.AttributeType.STRING },
            sortKey: { name: 'tenantStatus', type: dynamodb.AttributeType.STRING },
            projectionType: dynamodb.ProjectionType.ALL,
        });
        this.table = dynamoTable;
        this.tableName = tableName;
    }
}
exports.DynamoTenantTable = DynamoTenantTable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RydWN0LWR5bmFtb2RiLXRlbmFudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvbnN0cnVjdC1keW5hbW9kYi10ZW5hbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkNBQXVDO0FBQ3ZDLHFEQUFxRDtBQUVyRCw2Q0FBNEM7QUFFNUMsTUFBYSxpQkFBa0IsU0FBUSxzQkFBUztJQUs1QyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLFdBQXdCO1FBQzlELEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxXQUFXLENBQUMsU0FBUyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFOUMsTUFBTSxTQUFTLEdBQUcsR0FBRyxXQUFXLENBQUMsU0FBUyxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBRWxELE1BQU0sV0FBVyxHQUFHLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ3BELFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFO1lBQ3ZFLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFDO1lBQ2xFLFdBQVcsRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLGVBQWU7WUFDakQsU0FBUyxFQUFFLFNBQVM7WUFDcEIsYUFBYSxFQUFFLDJCQUFhLENBQUMsTUFBTTtTQUN0QyxDQUFDLENBQUM7UUFFSCxXQUFXLENBQUMsdUJBQXVCLENBQUM7WUFDaEMsU0FBUyxFQUFFLGlCQUFpQjtZQUM1QixZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBQztZQUN2RSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBQztZQUNwRSxjQUFjLEVBQUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxHQUFHO1NBQzlDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQy9CLENBQUM7Q0FDSjtBQTVCRCw4Q0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCAqIGFzIGR5bmFtb2RiIGZyb20gJ2F3cy1jZGstbGliL2F3cy1keW5hbW9kYic7XG5pbXBvcnQgeyBCdWlsZENvbmZpZyB9IGZyb20gJy4vYnVpbGQtY29uZmlnJztcbmltcG9ydCB7IFJlbW92YWxQb2xpY3kgfSBmcm9tICdhd3MtY2RrLWxpYic7XG4gIFxuZXhwb3J0IGNsYXNzIER5bmFtb1RlbmFudFRhYmxlIGV4dGVuZHMgQ29uc3RydWN0IHtcblxuICAgIHB1YmxpYyByZWFkb25seSB0YWJsZTogZHluYW1vZGIuVGFibGU7XG4gICAgcHVibGljIHJlYWRvbmx5IHRhYmxlTmFtZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgYnVpbGRDb25maWc6IEJ1aWxkQ29uZmlnKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBgJHtidWlsZENvbmZpZy5lbnZQcmVmaXh9JHtpZH1gKTtcblxuICAgICAgICBjb25zdCB0YWJsZU5hbWUgPSBgJHtidWlsZENvbmZpZy5lbnZQcmVmaXh9JHtpZH1gO1xuXG4gICAgICAgIGNvbnN0IGR5bmFtb1RhYmxlID0gbmV3IGR5bmFtb2RiLlRhYmxlKHRoaXMsIHRhYmxlTmFtZSwgeyBcbiAgICAgICAgICAgIHBhcnRpdGlvbktleTogeyBuYW1lOiAndGVuYW50SWQnLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlNUUklORyB9LFxuICAgICAgICAgICAgc29ydEtleToge25hbWU6ICd0ZW5hbnRDb2RlJywgdHlwZTogZHluYW1vZGIuQXR0cmlidXRlVHlwZS5TVFJJTkd9LFxuICAgICAgICAgICAgYmlsbGluZ01vZGU6IGR5bmFtb2RiLkJpbGxpbmdNb2RlLlBBWV9QRVJfUkVRVUVTVCxcbiAgICAgICAgICAgIHRhYmxlTmFtZTogdGFibGVOYW1lLFxuICAgICAgICAgICAgcmVtb3ZhbFBvbGljeTogUmVtb3ZhbFBvbGljeS5SRVRBSU5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgZHluYW1vVGFibGUuYWRkR2xvYmFsU2Vjb25kYXJ5SW5kZXgoe1xuICAgICAgICAgICAgaW5kZXhOYW1lOiAndGVuYW50Q29kZUluZGV4JyxcbiAgICAgICAgICAgIHBhcnRpdGlvbktleToge25hbWU6ICd0ZW5hbnRDb2RlJywgdHlwZTogZHluYW1vZGIuQXR0cmlidXRlVHlwZS5TVFJJTkd9LFxuICAgICAgICAgICAgc29ydEtleToge25hbWU6ICd0ZW5hbnRTdGF0dXMnLCB0eXBlOiBkeW5hbW9kYi5BdHRyaWJ1dGVUeXBlLlNUUklOR30sXG4gICAgICAgICAgICBwcm9qZWN0aW9uVHlwZTogZHluYW1vZGIuUHJvamVjdGlvblR5cGUuQUxMLFxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnRhYmxlID0gZHluYW1vVGFibGU7XG4gICAgICAgIHRoaXMudGFibGVOYW1lID0gdGFibGVOYW1lO1xuICAgIH1cbn0iXX0=